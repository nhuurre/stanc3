  $ ../../../../../../../install/default/bin/stanc --auto-format Rate_1.stan
// Inferring a Rate
data {
  int<lower=1> n;
  int<lower=0> k;
}
parameters {
  real<lower=0, upper=1> theta;
}
model {
  // Prior Distribution for Rate Theta
  theta ~ beta(1, 1);
  // Observed Counts
  k ~ binomial(n, theta);
}

  $ ../../../../../../../install/default/bin/stanc --auto-format Rate_2.stan
// Difference Between Two Rates
data {
  int<lower=1> n1;
  int<lower=1> n2;
  int<lower=0> k1;
  int<lower=0> k2;
}
parameters {
  real<lower=0, upper=1> theta1;
  real<lower=0, upper=1> theta2;
}
transformed parameters {
  real<lower=-1, upper=1> delta;
  delta <- theta1 - theta2;
}
model {
  // Prior Distribution for Rate Theta
  theta1 ~ beta(1, 1);
  theta2 ~ beta(1, 1);
  // Observed Counts
  k1 ~ binomial(n1, theta1);
  k2 ~ binomial(n2, theta2);
}


Warning: deprecated language construct used in 'Rate_2.stan', line 14, column 9:
   -------------------------------------------------
    12:  transformed parameters {
    13:    real<lower=-1,upper=1> delta;
    14:    delta <- theta1 - theta2;
                  ^
    15:  }
    16:  model {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

  $ ../../../../../../../install/default/bin/stanc --auto-format Rate_3.stan
// Inferring a Common Rate
data {
  int<lower=1> n1;
  int<lower=1> n2;
  int<lower=0> k1;
  int<lower=0> k2;
}
parameters {
  real<lower=0, upper=1> theta;
}
model {
  // Prior on Single Rate Theta
  theta ~ beta(1, 1);
  // Observed Counts
  k1 ~ binomial(n1, theta);
  k2 ~ binomial(n2, theta);
}

  $ ../../../../../../../install/default/bin/stanc --auto-format Rate_4.stan
// Prior and Posterior Prediction
data {
  int<lower=1> n;
  int<lower=0> k;
}
parameters {
  real<lower=0, upper=1> theta;
  real<lower=0, upper=1> thetaprior;
}
model {
  // Prior on Rate Theta
  theta ~ beta(1, 1);
  thetaprior ~ beta(1, 1);
  // Observed Data
  k ~ binomial(n, theta);
}
generated quantities {
  int<lower=0> postpredk;
  int<lower=0> priorpredk;
  // Posterior Predictive
  postpredk <- binomial_rng(n, theta);
  // Prior Predictive
  priorpredk <- binomial_rng(n, thetaprior);
}


Warning: deprecated language construct used in 'Rate_4.stan', line 22, column 13:
   -------------------------------------------------
    20:      
    21:    // Posterior Predictive
    22:    postpredk <- binomial_rng(n, theta);
                      ^
    23:    // Prior Predictive
    24:    priorpredk <- binomial_rng(n, thetaprior);
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'Rate_4.stan', line 24, column 14:
   -------------------------------------------------
    22:    postpredk <- binomial_rng(n, theta);
    23:    // Prior Predictive
    24:    priorpredk <- binomial_rng(n, thetaprior);
                       ^
    25:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

  $ ../../../../../../../install/default/bin/stanc --auto-format Rate_5.stan
// Inferring a Common Rate, With Posterior Predictive
data {
  int<lower=1> n1;
  int<lower=1> n2;
  int<lower=0> k1;
  int<lower=0> k2;
}
parameters {
  real<lower=0, upper=1> theta;
}
model {
  // Prior on Single Rate Theta
  theta ~ beta(1, 1);
  // Observed Counts
  k1 ~ binomial(n1, theta);
  k2 ~ binomial(n2, theta);
}
generated quantities {
  int<lower=0, upper=n1> postpredk1;
  int<lower=0, upper=n2> postpredk2;
  // Posterior Predictive
  postpredk1 <- binomial_rng(n1, theta);
  postpredk2 <- binomial_rng(n2, theta);
}


Warning: deprecated language construct used in 'Rate_5.stan', line 24, column 14:
   -------------------------------------------------
    22:      
    23:    // Posterior Predictive
    24:    postpredk1 <- binomial_rng(n1, theta);
                       ^
    25:    postpredk2 <- binomial_rng(n2, theta);
    26:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'Rate_5.stan', line 25, column 14:
   -------------------------------------------------
    23:    // Posterior Predictive
    24:    postpredk1 <- binomial_rng(n1, theta);
    25:    postpredk2 <- binomial_rng(n2, theta);
                       ^
    26:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

  $ ../../../../../../../install/default/bin/stanc --auto-format Survey.stan
/* 
* Notes to Stan model 
* --------------------
* This model code is more difficult to understand in Stan implementation since 
* Stan is unable to sample discrete parameters. This may change in the future. 
* For better understanding read Stan manual chapter "Mixture Modeling" (p.68 in 
* version 2.4.0) first.
*/
// Inferring Return Rate and Number of Surveys from Observed Returns
data {
  int<lower=0> nmax;
  int<lower=0> m;
  int<lower=0, upper=nmax> k[m];
}
transformed data {
  int<lower=0> nmin;
  // Minimal possible n
  nmin <- max(k);
}
parameters {
  real<lower=0, upper=1> theta;
}
transformed parameters {
  vector[nmax] lp_parts;
  // Log probability for each n
  // First part of the trick for mixture model
  for (n in 1 : nmax) 
    if (n < nmin) 
      lp_parts[n] <- log(1.0 / nmax) + negative_infinity();
      // Zero probability
    else 
      lp_parts[n] <- log(1.0 / nmax) + binomial_log(k, n, theta);
}
model {
  // Second part of the trick for mixture model
  increment_log_prob(log_sum_exp(lp_parts));
}
generated quantities {
  int<lower=1, upper=nmax> n;
  simplex[nmax] prob_n;
  // Transforming lp_parts to probabilities of each n
  prob_n <- softmax(lp_parts);
  n <- categorical_rng(prob_n);
}


Warning: deprecated language construct used in 'Survey.stan', line 19, column 8:
   -------------------------------------------------
    17:    int<lower=0> nmin;  // Minimal possible n
    18:    
    19:    nmin <- max(k);
                 ^
    20:  }
    21:  parameters {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'Survey.stan', line 30, column 19:
   -------------------------------------------------
    28:    for (n in 1:nmax)
    29:      if (n < nmin)
    30:        lp_parts[n] <- log(1.0 / nmax) + negative_infinity();  // Zero probability
                            ^
    31:      else
    32:        lp_parts[n] <- log(1.0 / nmax) + binomial_log(k, n, theta); 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'Survey.stan', line 32, column 19:
   -------------------------------------------------
    30:        lp_parts[n] <- log(1.0 / nmax) + negative_infinity();  // Zero probability
    31:      else
    32:        lp_parts[n] <- log(1.0 / nmax) + binomial_log(k, n, theta); 
                            ^
    33:  }
    34:  model {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'Survey.stan', line 36, column 19:
   -------------------------------------------------
    34:  model {
    35:    // Second part of the trick for mixture model
    36:    increment_log_prob(log_sum_exp(lp_parts));
                            ^
    37:  }
    38:  generated quantities {
   -------------------------------------------------

increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.


Warning: deprecated language construct used in 'Survey.stan', line 43, column 10:
   -------------------------------------------------
    41:    
    42:    // Transforming lp_parts to probabilities of each n
    43:    prob_n <- softmax(lp_parts);
                   ^
    44:    n <- categorical_rng(prob_n);
    45:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'Survey.stan', line 44, column 5:
   -------------------------------------------------
    42:    // Transforming lp_parts to probabilities of each n
    43:    prob_n <- softmax(lp_parts);
    44:    n <- categorical_rng(prob_n);
              ^
    45:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

